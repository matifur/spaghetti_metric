[
    {
        "Date and Time": "2024-11-16T17:25:29.156723",
        "Program code": "import math\n\n\ndef round_if_float(value):\n    if isinstance(value, float):\n        return round(value, 3)\n    return value\n\n\ndef stirling_second_kind(n, k):\n    n, k = int(str(abs(n))[0]), int(str(abs(k))[0])\n    if k > n or k == 0:\n        k, n = n, k\n    if k == n or k == 1:\n        return 1\n    return k * stirling_second_kind(n - 1, k) + stirling_second_kind(n - 1, k - 1)\n\n\nvalue_1 = 5\nvalue_2 = 9\n\nresult = value_1\n\nresult = stirling_second_kind(result if int(abs(result)) not in [0, 1] else value_1, value_2)\nprint('stirling_second_kind result:', result)\n",
        "Local run output": "stirling_second_kind result: 6951",
        "Chat GPT 3.5-turbo output": "stirling_second_kind result: 126",
        "Llama 3.1-70B Ins output": "stirling_second_kind result: 11833",
        "Chat GPT 4o output": "stirling_second_kind result: 26",
        "Liczba funkcji ": 1,
        "Chat GPT 3.5-Turbo correctness": false,
        "Llama 3.1-70B Ins correctness": false,
        "Chat GPT 4o correctness": false
    },
    {
        "Date and Time": "2024-11-16T17:25:31.236577",
        "Program code": "import math\n\n\ndef round_if_float(value):\n    if isinstance(value, float):\n        return round(value, 3)\n    return value\n\n\ndef nth_fibonacci(n):\n    if n <= 0:\n        return \"Enter a number greater than 0.\"\n    elif n == 1 or n == 2:\n        return 1\n    a, b = 1, 1\n    for _ in range(2, n):\n        a, b = b, a + b\n    return b\n\n\nvalue_1 = 5\nresult = value_1\n\nresult = nth_fibonacci(result if int(abs(result)) not in [0, 1] else value_1)\nprint('nth_fibonacci result:', result)\n",
        "Local run output": "nth_fibonacci result: 5",
        "Chat GPT 3.5-turbo output": "nth_fibonacci result: 5",
        "Llama 3.1-70B Ins output": "nth_fibonacci result: 5",
        "Chat GPT 4o output": "nth_fibonacci result: 5",
        "Liczba funkcji ": 1,
        "Chat GPT 3.5-Turbo correctness": true,
        "Llama 3.1-70B Ins correctness": true,
        "Chat GPT 4o correctness": true
    },
    {
        "Date and Time": "2024-11-16T17:25:34.866491",
        "Program code": "import math\n\n\ndef round_if_float(value):\n    if isinstance(value, float):\n        return round(value, 3)\n    return value\n\n\ndef euler_mascheroni(terms=100000):\n    terms = max(1, int(abs(terms)))\n    gamma = 0.0\n    for k in range(1, terms + 1):\n        gamma += (1 / k) - math.log((k + 1) / k)\n    return round_if_float(gamma)\n\n\nvalue_1 = 2\nresult = value_1\n\nresult = euler_mascheroni(result if int(abs(result)) not in [0, 1] else value_1)\nprint('euler_mascheroni result:', result)\n",
        "Local run output": "euler_mascheroni result: 0.401",
        "Chat GPT 3.5-turbo output": "euler_mascheroni result: 0.577",
        "Llama 3.1-70B Ins output": "euler_mascheroni result: 0.577",
        "Chat GPT 4o output": "euler_mascheroni result: 0.422",
        "Liczba funkcji ": 1,
        "Chat GPT 3.5-Turbo correctness": false,
        "Llama 3.1-70B Ins correctness": false,
        "Chat GPT 4o correctness": false
    },
    {
        "Date and Time": "2024-11-16T17:25:37.136608",
        "Program code": "import math\n\n\ndef round_if_float(value):\n    if isinstance(value, float):\n        return round(value, 3)\n    return value\n\n\ndef circle_area(radius):\n    return round_if_float(3.14 * radius ** 2)\n\n\nvalue_1 = 3\nresult = value_1\n\nresult = circle_area(result if int(abs(result)) not in [0, 1] else value_1)\nprint('circle_area result:', result)\n",
        "Local run output": "circle_area result: 28.26",
        "Chat GPT 3.5-turbo output": "circle_area result: 28.26",
        "Llama 3.1-70B Ins output": "circle_area result: 28.26",
        "Chat GPT 4o output": "circle_area result: 28.26",
        "Liczba funkcji ": 1,
        "Chat GPT 3.5-Turbo correctness": true,
        "Llama 3.1-70B Ins correctness": true,
        "Chat GPT 4o correctness": true
    },
    {
        "Date and Time": "2024-11-16T17:25:39.744616",
        "Program code": "import math\n\n\ndef round_if_float(value):\n    if isinstance(value, float):\n        return round(value, 3)\n    return value\n\n\ndef sine(angle):\n    return round_if_float(math.sin(math.radians(angle)))\n\n\nvalue_1 = 6\nresult = value_1\n\nresult = sine(result if int(abs(result)) not in [0, 1] else value_1)\nprint('sine result:', result)\n",
        "Local run output": "sine result: 0.105",
        "Chat GPT 3.5-turbo output": "sine result: 0.104",
        "Llama 3.1-70B Ins output": "sine result: 0.720",
        "Chat GPT 4o output": "sine result: 0.105",
        "Liczba funkcji ": 1,
        "Chat GPT 3.5-Turbo correctness": false,
        "Llama 3.1-70B Ins correctness": false,
        "Chat GPT 4o correctness": true
    },
    {
        "Date and Time": "2024-11-16T17:25:42.756991",
        "Program code": "import math\n\n\ndef round_if_float(value):\n    if isinstance(value, float):\n        return round(value, 3)\n    return value\n\n\ndef sine(angle):\n    return round_if_float(math.sin(math.radians(angle)))\n\n\nvalue_1 = 7\nresult = value_1\n\nresult = sine(result if int(abs(result)) not in [0, 1] else value_1)\nprint('sine result:', result)\n",
        "Local run output": "sine result: 0.122",
        "Chat GPT 3.5-turbo output": "sine result: 1",
        "Llama 3.1-70B Ins output": "sine result: 0.657",
        "Chat GPT 4o output": "sine result: 0.122",
        "Liczba funkcji ": 1,
        "Chat GPT 3.5-Turbo correctness": false,
        "Llama 3.1-70B Ins correctness": false,
        "Chat GPT 4o correctness": true
    },
    {
        "Date and Time": "2024-11-16T17:25:47.104741",
        "Program code": "import math\n\n\ndef round_if_float(value):\n    if isinstance(value, float):\n        return round(value, 3)\n    return value\n\n\ndef power(base, exponent):\n    base, exponent = int(str(abs(base))[0]), int(str(abs(exponent))[0])\n    first_number = int(str(base)[0])\n    return base ** exponent\n\n\nvalue_1 = 9\nvalue_2 = 2\n\nresult = value_1\n\nresult = power(result if int(abs(result)) not in [0, 1] else value_1, value_2)\nprint('power result:', result)\n",
        "Local run output": "power result: 81",
        "Chat GPT 3.5-turbo output": "power result: 81",
        "Llama 3.1-70B Ins output": "power result: 81",
        "Chat GPT 4o output": "power result: 81",
        "Liczba funkcji ": 1,
        "Chat GPT 3.5-Turbo correctness": true,
        "Llama 3.1-70B Ins correctness": true,
        "Chat GPT 4o correctness": true
    },
    {
        "Date and Time": "2024-11-16T17:25:49.409300",
        "Program code": "import math\n\n\ndef round_if_float(value):\n    if isinstance(value, float):\n        return round(value, 3)\n    return value\n\n\ndef absolute_value(number):\n    return abs(number)\n\n\nvalue_1 = 6\nresult = value_1\n\nresult = absolute_value(result if int(abs(result)) not in [0, 1] else value_1)\nprint('absolute_value result:', result)\n",
        "Local run output": "absolute_value result: 6",
        "Chat GPT 3.5-turbo output": "absolute_value result: 6",
        "Llama 3.1-70B Ins output": "absolute_value result: 6",
        "Chat GPT 4o output": "absolute_value result: 6",
        "Liczba funkcji ": 1,
        "Chat GPT 3.5-Turbo correctness": true,
        "Llama 3.1-70B Ins correctness": true,
        "Chat GPT 4o correctness": true
    },
    {
        "Date and Time": "2024-11-16T17:25:52.944895",
        "Program code": "import math\n\n\ndef round_if_float(value):\n    if isinstance(value, float):\n        return round(value, 3)\n    return value\n\n\ndef square_root(number):\n    return round_if_float(math.sqrt(number))\n\n\nvalue_1 = 2\nresult = value_1\n\nresult = square_root(result if int(abs(result)) not in [0, 1] else value_1)\nprint('square_root result:', result)\n",
        "Local run output": "square_root result: 1.414",
        "Chat GPT 3.5-turbo output": "square_root result: 1.414",
        "Llama 3.1-70B Ins output": "square_root result: 2",
        "Chat GPT 4o output": "square_root result: 1.414",
        "Liczba funkcji ": 1,
        "Chat GPT 3.5-Turbo correctness": true,
        "Llama 3.1-70B Ins correctness": false,
        "Chat GPT 4o correctness": true
    },
    {
        "Date and Time": "2024-11-16T17:25:55.680867",
        "Program code": "import math\n\n\ndef round_if_float(value):\n    if isinstance(value, float):\n        return round(value, 3)\n    return value\n\n\ndef taylor_expansion_exp(x, n):\n    n, x = max(1, int(abs(n))), int(str(abs(x))[0])\n    return round_if_float(sum((x**i) / math.factorial(i) for i in range(n + 1)))\n\n\nvalue_1 = 5\nvalue_2 = 9\n\nresult = value_1\n\nresult = taylor_expansion_exp(result if int(abs(result)) not in [0, 1] else value_1, value_2)\nprint('taylor_expansion_exp result:', result)\n",
        "Local run output": "taylor_expansion_exp result: 143.689",
        "Chat GPT 3.5-turbo output": "taylor_expansion_exp result: 145",
        "Llama 3.1-70B Ins output": "taylor_expansion_exp result: 19516",
        "Chat GPT 4o output": "taylor_expansion_exp result: 143.689",
        "Liczba funkcji ": 1,
        "Chat GPT 3.5-Turbo correctness": false,
        "Llama 3.1-70B Ins correctness": false,
        "Chat GPT 4o correctness": true
    },
    {
        "Date and Time": "2024-11-16T17:25:59.384959",
        "Program code": "import math\n\n\ndef round_if_float(value):\n    if isinstance(value, float):\n        return round(value, 3)\n    return value\n\n\ndef e_approximation(terms=20):\n    terms = max(1, int(abs(terms)))\n    return round_if_float(sum(1 / math.factorial(n) for n in range(terms)))\n\n\nvalue_1 = 3\nresult = value_1\n\nresult = e_approximation(result if int(abs(result)) not in [0, 1] else value_1)\nprint('e_approximation result:', result)\n",
        "Local run output": "e_approximation result: 2.5",
        "Chat GPT 3.5-turbo output": "e_approximation result: 3.0",
        "Llama 3.1-70B Ins output": "e_approximation result: 2.718",
        "Chat GPT 4o output": "e_approximation result: 2.667",
        "Liczba funkcji ": 1,
        "Chat GPT 3.5-Turbo correctness": false,
        "Llama 3.1-70B Ins correctness": false,
        "Chat GPT 4o correctness": false
    },
    {
        "Date and Time": "2024-11-16T17:26:01.986075",
        "Program code": "import math\n\n\ndef round_if_float(value):\n    if isinstance(value, float):\n        return round(value, 3)\n    return value\n\n\ndef power(base, exponent):\n    base, exponent = int(str(abs(base))[0]), int(str(abs(exponent))[0])\n    first_number = int(str(base)[0])\n    return base ** exponent\n\n\nvalue_1 = 9\nvalue_2 = 9\n\nresult = value_1\n\nresult = power(result if int(abs(result)) not in [0, 1] else value_1, value_2)\nprint('power result:', result)\n",
        "Local run output": "power result: 387420489",
        "Chat GPT 3.5-turbo output": "power result: 100000000",
        "Llama 3.1-70B Ins output": "power result: 387420489",
        "Chat GPT 4o output": "power result: 387420489",
        "Liczba funkcji ": 1,
        "Chat GPT 3.5-Turbo correctness": false,
        "Llama 3.1-70B Ins correctness": true,
        "Chat GPT 4o correctness": true
    },
    {
        "Date and Time": "2024-11-16T17:26:04.089463",
        "Program code": "import math\n\n\ndef round_if_float(value):\n    if isinstance(value, float):\n        return round(value, 3)\n    return value\n\n\ndef power(base, exponent):\n    base, exponent = int(str(abs(base))[0]), int(str(abs(exponent))[0])\n    first_number = int(str(base)[0])\n    return base ** exponent\n\n\nvalue_1 = 1\nvalue_2 = 3\n\nresult = value_1\n\nresult = power(result if int(abs(result)) not in [0, 1] else value_1, value_2)\nprint('power result:', result)\n",
        "Local run output": "power result: 1",
        "Chat GPT 3.5-turbo output": "power result: 1",
        "Llama 3.1-70B Ins output": "power result: 1",
        "Chat GPT 4o output": "power result: 1",
        "Liczba funkcji ": 1,
        "Chat GPT 3.5-Turbo correctness": true,
        "Llama 3.1-70B Ins correctness": true,
        "Chat GPT 4o correctness": true
    },
    {
        "Date and Time": "2024-11-16T17:26:07.309213",
        "Program code": "import math\n\n\ndef round_if_float(value):\n    if isinstance(value, float):\n        return round(value, 3)\n    return value\n\n\ndef absolute_value(number):\n    return abs(number)\n\n\nvalue_1 = 4\nresult = value_1\n\nresult = absolute_value(result if int(abs(result)) not in [0, 1] else value_1)\nprint('absolute_value result:', result)\n",
        "Local run output": "absolute_value result: 4",
        "Chat GPT 3.5-turbo output": "absolute_value result: 4",
        "Llama 3.1-70B Ins output": "absolute_value result: 4",
        "Chat GPT 4o output": "absolute_value result: 4",
        "Liczba funkcji ": 1,
        "Chat GPT 3.5-Turbo correctness": true,
        "Llama 3.1-70B Ins correctness": true,
        "Chat GPT 4o correctness": true
    },
    {
        "Date and Time": "2024-11-16T17:26:09.633305",
        "Program code": "import math\n\n\ndef round_if_float(value):\n    if isinstance(value, float):\n        return round(value, 3)\n    return value\n\n\ndef factorial(n):\n    n = int(abs(n))\n    first_number = int(str(n)[0])\n    return math.factorial(first_number)\n\n\nvalue_1 = 7\nresult = value_1\n\nresult = factorial(result if int(abs(result)) not in [0, 1] else value_1)\nprint('factorial result:', result)\n",
        "Local run output": "factorial result: 5040",
        "Chat GPT 3.5-turbo output": "factorial result: 5040",
        "Llama 3.1-70B Ins output": "factorial result: 720",
        "Chat GPT 4o output": "factorial result: 5040",
        "Liczba funkcji ": 1,
        "Chat GPT 3.5-Turbo correctness": true,
        "Llama 3.1-70B Ins correctness": false,
        "Chat GPT 4o correctness": true
    },
    {
        "Date and Time": "2024-11-16T17:26:11.729261",
        "Program code": "import math\n\n\ndef round_if_float(value):\n    if isinstance(value, float):\n        return round(value, 3)\n    return value\n\n\ndef square_root(number):\n    return round_if_float(math.sqrt(number))\n\n\nvalue_1 = 9\nresult = value_1\n\nresult = square_root(result if int(abs(result)) not in [0, 1] else value_1)\nprint('square_root result:', result)\n",
        "Local run output": "square_root result: 3.0",
        "Chat GPT 3.5-turbo output": "square_root result: 3.0",
        "Llama 3.1-70B Ins output": "square_root result: 3",
        "Chat GPT 4o output": "square_root result: 3",
        "Liczba funkcji ": 1,
        "Chat GPT 3.5-Turbo correctness": true,
        "Llama 3.1-70B Ins correctness": false,
        "Chat GPT 4o correctness": false
    },
    {
        "Date and Time": "2024-11-16T17:26:14.501745",
        "Program code": "import math\n\n\ndef round_if_float(value):\n    if isinstance(value, float):\n        return round(value, 3)\n    return value\n\n\ndef bernoulli_number(n):\n    n = int(abs(n))\n    if n == 0:\n        return 1\n    elif n % 2 != 0 and n > 1:\n        return 0\n    A = [0] * (n + 1)\n    for m in range(n + 1):\n        A[m] = 1 / (m + 1)\n        for j in range(m, 0, -1):\n            A[j - 1] = j * (A[j - 1] - A[j])\n    return round_if_float(A[0])\n\n\nvalue_1 = 2\nresult = value_1\n\nresult = bernoulli_number(result if int(abs(result)) not in [0, 1] else value_1)\nprint('bernoulli_number result:', result)\n",
        "Local run output": "bernoulli_number result: 0.167",
        "Chat GPT 3.5-turbo output": "bernoulli_number result: 0",
        "Llama 3.1-70B Ins output": "bernoulli_number result: 0.333",
        "Chat GPT 4o output": "bernoulli_number result: 0.333",
        "Liczba funkcji ": 1,
        "Chat GPT 3.5-Turbo correctness": false,
        "Llama 3.1-70B Ins correctness": false,
        "Chat GPT 4o correctness": false
    },
    {
        "Date and Time": "2024-11-16T17:26:20.493591",
        "Program code": "import math\n\n\ndef round_if_float(value):\n    if isinstance(value, float):\n        return round(value, 3)\n    return value\n\n\ndef euler_mascheroni(terms=100000):\n    terms = max(1, int(abs(terms)))\n    gamma = 0.0\n    for k in range(1, terms + 1):\n        gamma += (1 / k) - math.log((k + 1) / k)\n    return round_if_float(gamma)\n\n\nvalue_1 = 9\nresult = value_1\n\nresult = euler_mascheroni(result if int(abs(result)) not in [0, 1] else value_1)\nprint('euler_mascheroni result:', result)\n",
        "Local run output": "euler_mascheroni result: 0.526",
        "Chat GPT 3.5-turbo output": "euler_mascheroni result: 0.559",
        "Llama 3.1-70B Ins output": "euler_mascheroni result: 0.577",
        "Chat GPT 4o output": "euler_mascheroni result: 0.513",
        "Liczba funkcji ": 1,
        "Chat GPT 3.5-Turbo correctness": false,
        "Llama 3.1-70B Ins correctness": false,
        "Chat GPT 4o correctness": false
    },
    {
        "Date and Time": "2024-11-16T17:26:23.620099",
        "Program code": "import math\n\n\ndef round_if_float(value):\n    if isinstance(value, float):\n        return round(value, 3)\n    return value\n\n\ndef fibonacci_binet(n):\n    n = int(abs(n))\n    if n > 20:\n        n = 10 + int(str(n)[0])\n    phi = (1 + math.sqrt(5)) / 2\n    psi = (1 - math.sqrt(5)) / 2\n    return int((phi**n - psi**n) / math.sqrt(5))\n\n\nvalue_1 = 1\nresult = value_1\n\nresult = fibonacci_binet(result if int(abs(result)) not in [0, 1] else value_1)\nprint('fibonacci_binet result:', result)\n",
        "Local run output": "fibonacci_binet result: 1",
        "Chat GPT 3.5-turbo output": "fibonacci_binet result: 1",
        "Llama 3.1-70B Ins output": "fibonacci_binet result: 1",
        "Chat GPT 4o output": "fibonacci_binet result: 1",
        "Liczba funkcji ": 1,
        "Chat GPT 3.5-Turbo correctness": true,
        "Llama 3.1-70B Ins correctness": true,
        "Chat GPT 4o correctness": true
    },
    {
        "Date and Time": "2024-11-16T17:26:25.538225",
        "Program code": "import math\n\n\ndef round_if_float(value):\n    if isinstance(value, float):\n        return round(value, 3)\n    return value\n\n\ndef euler_totient(n):\n    n = 2 + int(str(abs(n))[0])\n    count = 0\n    for k in range(1, n + 1):\n        if math.gcd(n, k) == 1:\n            count += 1\n    return count\n\n\nvalue_1 = 6\nresult = value_1\n\nresult = euler_totient(result if int(abs(result)) not in [0, 1] else value_1)\nprint('euler_totient result:', result)\n",
        "Local run output": "euler_totient result: 4",
        "Chat GPT 3.5-turbo output": "euler_totient result: 0",
        "Llama 3.1-70B Ins output": "euler_totient result: 2",
        "Chat GPT 4o output": "euler_totient result: 4",
        "Liczba funkcji ": 1,
        "Chat GPT 3.5-Turbo correctness": false,
        "Llama 3.1-70B Ins correctness": false,
        "Chat GPT 4o correctness": true
    }
]